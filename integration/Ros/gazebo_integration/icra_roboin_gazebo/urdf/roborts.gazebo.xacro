<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- materials -->
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey</material>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="fr_wheel_Link">
    <material>Gazebo/FlatBlack</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="fl_wheel_Link">
    <material>Gazebo/FlatBlack</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="br_wheel_Link">
    <material>Gazebo/FlatBlack</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo reference="bl_wheel_Link">
    <material>Gazebo/FlatBlack</material>
    <gravity>true</gravity>
  </gazebo>
  
  
  <gazebo reference="base_laser_link">
    <material>Gazebo/FlatBlack</material>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="yaw_Link">
    <material>Gazebo/DarkGrey</material>
    <gravity>true</gravity>
  </gazebo>

  <xacro:macro name="led_color" params="led_color">
    <gazebo reference="front_led_Link">
      <material>Gazebo/${led_color}</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="right_led_Link">
      <material>Gazebo/${led_color}</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="left_led_Link">
      <material>Gazebo/${led_color}</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="hp_led_Link">
      <material>Gazebo/${led_color}</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <gazebo reference="back_led_Link">
      <material>Gazebo/${led_color}</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>
  </xacro:macro>


  <!-- position controller plugin-->
  <gazebo>
    <plugin name="mecanum_base_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>100.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <broadcastTF>true</broadcastTF>
    </plugin>
  </gazebo>


  <!-- camera -->
  <gazebo reference="camera_Link">

      <sensor name="depth" type="depth">
        <pose frame="">0 0 0.004 0 0 0</pose>
        <camera name="__default__">
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>0</visualize>

        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>realsense</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <depthImageTopicName>depth_raw</depthImageTopicName>
          <depthImageInfoTopicName>depth_info</depthImageInfoTopicName>
	  <pointCloudCutoffMax>10</pointCloudCutoffMax>
    	  <rangeMax>10.0</rangeMax>
          <frameName>camera_Link</frameName>

          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          
        </plugin>
      </sensor>

  </gazebo>



  <xacro:macro name="gazebo_plugin" params="namespace">

    <gazebo reference="${namespace}/pitch_Link">
      <material>Gazebo/DarkGrey</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <!-- hokuyo -->
    <!-- Noise is sampled independently per pixel on each frame.  
        That pixel's noise value is added to each of its color
        channels, which at that point lie in the range [0,1]. -->
    <gazebo reference="base_laser_link">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>2000 2000 2000 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-2.3</min_angle>
              <max_angle>2.3</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>10.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/${namespace}/scan</topicName>
          <frameName>base_laser_link</frameName>
        </plugin>
      </sensor>
    </gazebo>

    
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/${namespace}</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        <legacyModeNS>true</legacyModeNS>
      </plugin>
    </gazebo> 

    <gazebo>
      <plugin name="roborts_shooter" filename="libgazebo_shooter_plugin.so">
        <robotNamespace>${namespace}</robotNamespace>
        <gimbal_link>${namespace}/pitch_Link</gimbal_link>
        <fake_link>${namespace}/fake_link</fake_link>
        <reference_frame>map</reference_frame>
        <force>4000.0</force>
        <default_freq>30</default_freq>
      </plugin>
    </gazebo>

    <gazebo reference="front_armor_link">
      <sensor name="front_armor_contactsensor_sensor" type="contact">
        <always_on>true</always_on>
        <contact>
          <collision>base_footprint_fixed_joint_lump__front_armor_collision_collision_6</collision>
        </contact>
        <plugin name="front_armor_bumper" filename="libgazebo_ros_bumper.so">
          <bumperTopicName>front_armor_contact</bumperTopicName>
          <frameName>front_armor_link</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="left_armor_link">
      <sensor name="left_armor_contactsensor_sensor" type="contact">
        <always_on>true</always_on>
        <contact>
          <collision>base_footprint_fixed_joint_lump__left_armor_collision_collision_7</collision>
        </contact>
        <plugin name="left_armor_bumper" filename="libgazebo_ros_bumper.so">
          <bumperTopicName>left_armor_contact</bumperTopicName>
          <frameName>left_armor_link</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="right_armor_link">
      <sensor name="right_armor_contactsensor_sensor" type="contact">
        <always_on>true</always_on>
        <contact>
          <collision>base_footprint_fixed_joint_lump__right_armor_collision_collision_8</collision>
        </contact>
        <plugin name="right_armor_bumper" filename="libgazebo_ros_bumper.so">
          <bumperTopicName>right_armor_contact</bumperTopicName>
          <frameName>right_armor_link</frameName>
        </plugin>
      </sensor>
    </gazebo>

    <gazebo reference="back_armor_link">
      <sensor name="back_armor_contactsensor_sensor" type="contact">
        <always_on>true</always_on>
        <contact>
          <collision>base_footprint_fixed_joint_lump__back_armor_collision_collision_1</collision>
        </contact>
        <plugin name="back_armor_bumper" filename="libgazebo_ros_bumper.so">
          <bumperTopicName>back_armor_contact</bumperTopicName>
          <frameName>back_armor_link</frameName>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>
